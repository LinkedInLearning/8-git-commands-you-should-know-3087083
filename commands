git config --global user.name "username" (enter the username)

git config --global user.email "email" (enter the mail)

git init (to initialise an empty git repo)

git status ( to see the status of the files (staged, commited,etc))

git add "filename" (to bring the file into the staging area)

git commit "filename" (it becomes very important to make atleast one commit in order to start tracking of the file)

git add -A (to put multiple files into the staging Area)

[Note: if you will make changes on your file even after staging it then it's status will be shown as modified and we will have to again add it to the staging process and then commit it.]

{ to push the code to the branch}

1. commit the changes->> git commit
2. check the current working branch->> git branch -a
3. push the changes--> git push origin "your branch name"

--Intermediates--

1. git diff - to see the modifications made before commit and push
2. (a) git stash - to stash the modifications which could later be considered  
    either to commit and push or delete those modifications. It's just like putting the code in the pocket for a time.

   (b) git stash save "name of the stash" - It would work in the same way as
   2a but, here we will be naming our stash for ease. It is handy where we have to manage quite a number of changes.

   (c) git stash pop - It is used to pop/remove/delete/ the topmost stash.

   (d) git stash list - to view all the saved stashes.

   (e) git stash apply 's no.' - in order to apply the stashed modification.
